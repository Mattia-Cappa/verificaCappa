1) Le commit create in una repository locale, vengono sincronizzate
 automaticamente con la repository online collegata? ----> falso

2) Qual è il nuovo nome standard del branch principale utilizzato come
 convenzione in GIT? ----> Main

3) Come descriveresti il workflow dei comandi di GIT?
 ----> git add -> git commit -> git push

4) Qual è il comando da utilizzare per vedere l’elenco di tutte le commit del
 branch in cui ci si trova e i loro hashcode? ----> git log

5) Scrivi il comando per effettuare il rollback ad una commit precedente
 ----> git reset --hard [hashcode della commit alla quale si vuole tornare] 

6) Scrivi due motivazioni per giustificare l’utilizzo di GIT
 ----> git è utilissimo per lavorare in gruppo avendo costantemente sotto controllo il lavoro svolto, in aggiunta tramite git si può ramificare il proprio lavoro e renderlo così più ordinato e facile da riprendere.

7) Spiega la differenza tra git clone e git pull.
 Sostanzialmente tramite git pull "tiri" giù i vari file della repository online in quella locale in modo da essere aggiornato alla versione più recente del progetto, invece, con git clone, stai clonando letteralmente la repository online, ovvero la cartella online e quella locale sono la stessa cosa, infatti con git clone viene eseguito in automatico il comando per collegare la cartella locale alla repository online. 

8) Descrivi cosa sono i rami di sviluppo in GIT (branches). Spiega inoltre come si creano, come ci si sposta in un ramo esistente, come si uniscono le modifiche di un ramo in un altro e come vedere il ramo corrente, attenendoti ai comandi visti in classe.
 I branches in git sono uno strumento attraverso il quale si può ramificare il proprio progetto, aggiungendo dei rami di sviluppo (i rami possono anche essere assegnati a persone diverse), per crearne uno basterà eseguire il comando  git checkout -b [nomeBranch], per spostarsi invece da un ramo all'altro si usa  git checkout [nome del branch nel quale ci si vuole spostare], per invece unire al main tutti i cambiamenti fatti in un ipotetico branch "DEV" basterà essere nel main ed utilizzare il comando  git merge [DEV], per visualizzare il branch nel quale si è bisogna utilizzare  git status.

9) Spiega di cosa si occupa l’ingegneria del software.
 L'ingegneria del software è una branca dell'informatica che si occupa di gestire la realizzazione di software applicativi.

10) Spiega cosa è il ciclo di vita del software e le fasi in cui si suddivide.
 Il ciclo di vita di un software sono le varie fasi nel quale si divide la creazione di un software applicativo, e sono:
-analisi (capire se il progetto è fattibile sia economicamente sia teoricamente e analizzare i componenti e la varie attrezature che servirebbero)

-progettazione(pianificare chi farà cosa e descrivere il progetto nei minimi dettagli)

-realizzazione(insieme delle fasi che andranno a realizzare il software applicativo vero e proprio)

-avvio in produzione(il programma arriva effettivamente agli utenti)

-manutenzione(può essere di 3 tipi, manutenzione evolutiva atta a modificare il software per l'evoluzione delle tecnologie, manutenzione adattiva nel caso di modifiche di leggi per esempio, manutenzione correttiva per correggere qualche bug sfuggito in fase di realizzazione)
